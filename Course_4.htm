<!DOCTYPE html>

<html>

	<head>

		<title>Python</title>

		<link rel="stylesheet" href="css/atelier-sulphurpool-light.css" type="text/css">

		<script src="js/google-code-prettify/run_prettify.js?autoload=true&amp;lang=css"></script>

		<style>

			div.title {color: navy; font-weight: bold; width: 80%; font-size: 32px; text-align: center; position: relative; margin: auto;}

			div.subtitle {color: navy; font-weight: bold; width: 80%; font-size: 24px; text-align: position: relative; margin: auto;}

			div.block {color: navy; font-weight: bold; width: 80%; border-style: solid; padding: 5px; position: relative; margin: 10px auto; border-radius: 5px;}

			span {color: red}

		</style>

	</head>

	<body>

		<div class = "title">
			Course 4
		</div>

		<div class = "subtitle">List</div>
		<div class = "block">
            <li>A sequence of objects</li>
            <li>Each object can be any python object, such as, int, float, string, another list</li>
        </div>
        <div class = "block">
			<p style = "text-align:center;"><img src = "img/List_1.png" width = "40%"></p>
		</div>
		<div class = "block">
			<pre class = "prettyprint linenums">
# create an empty list
l = [] # []
l = list() # []

# create a list
l = [1, 2, 3, 4, 5, 6]

# create a list from a range
l = list(range(10)) # [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
l = list(range(3, 10)) # [3, 4, 5, 6, 7, 8, 9]
l = list(range(3, 10, 2)) # [3, 5, 7, 9]

# create a list from another list
l = [1, 2, 3, 4, 5, 6]
l2 = [e for e in l] # [1, 2, 3, 4, 5, 6]
l3 = [e for e in l if e%2 == 0] # [2, 4, 6]
			</pre>
        </div>
		<div class = "block">
			<pre class = "prettyprint linenums">
# access an element
l = [10, 5, 2, 20, 5, 6, 7, 8]
print(l[0]) # 10
print(l[5]) # 6
print(l[-2]) # 7

# slicing
print(l[:3]) # [10, 5, 2]
print(l[4:]) # [5, 6, 7, 8]
print(l[2:5]) # [2, 20, 5]
            </pre>
        </div>
		<div class = "block">
			<pre class = "prettyprint linenums">
# append an element
l = [1, 2, 3, 4, 5]
l.append(10) # [1, 2, 3, 4, 5, 10]

# insert an element at a specific inddex
l = [1, 2, 3, 4, 5]
l.insert(2, 10) # [1, 2, 10, 3, 4, 5]

# remove and return the last element
l = [1, 2, 3, 4, 10]
e = l.pop()
print(e, l) # 10 [1, 2, 3, 4]

# remove an element
l = [1, 2, 3, 4, 10]
del l[2]
print(l) # [1, 2, 4, 10]
			</pre>
		</div>
		<div class = "block">
			<pre class = "prettyprint linenums">
l = [1, 2]
l2 = [3, 4]

# type
print(type(l)) # &lt;class 'list'&gt;

# length
print(len(l)) # 2

# concatenation
l3 = l1 + l2 # [1, 2, 3, 4]

# repeat list elements
l4 = l*3 # [1, 2, 1, 2, 1, 2]

# reverse list
l.reverse()
print(l) # [2, 1]

# sort
l = [1, 5, 3, 2]
l.sort()
print(l) # [1, 2, 3, 5]
            </pre>
        </div>
		<div class = "subtitle">Dict</div>
		<div class = "block">
            <li>Each item is a pair of key and value</li>
        </div>
		<div class = "block">
			<pre class = "prettyprint linenums">
# create an empty dict
d = {}

# create a dict
d = {'Name': 'Zara', 'Age': 7, 'Class': 'First'}
            </pre>
        </div>
		<div class = "block">
			<pre class = "prettyprint linenums">
d = {'Name': 'Zara', 'Age': 7, 'Class': 'First'}

# access the value of a key
print(d['Name']) # Zara

# add an item
d['City'] = 'Yorktown'
print(d) # {'Name': 'Zara', 'Age': 7, 'Class': 'First', 'City': 'Yorktown'}

# remove an item
del d['Name']
print(d) # {'Age': 7, 'Class': 'First', 'City': 'Yorktown'}

# Remove all items of the dict
d.clear()
print(d) # {}

# Remove the whole dict
del d
            </pre>
        </div>
		<div class = "block">
			<pre class = "prettyprint linenums">
d = {'Name': 'Zara', 'Age': 7, 'Class': 'First'}

# check if a key in the dict
print('Age' in d) # True

# get keys
print(d.keys()) # ['Age', 'Class', 'City']

# get values
print(d.values()) # [7, 'First', 'Yorktown']

# get items
for key, value in d.items():
    print(key, value)
            </pre>
        </div>
		<div class = "subtitle">Tuple</div>
		<div class = "block">
            <li>A tuple is a sequence of immutable Python objects</li>
            <li>Each object can be any python object, such as, int, float, string, another list</li>
        </div>
		<div class = "block">
			<pre class = "prettyprint linenums">
# create an empty tuple
t = tuple()

# create a tuple
t = ('Name', 10)

# access element
print(t[0]) # Name
            </pre>
        </div>
		<div class = "block">
			<pre class = "prettyprint linenums">
# return multiple objects
def get_items():
     return 'Name', 10

items = get_items()
print(type(items)) # tuple
print(items) # ('Name', 10)

# Unpacking objects
item_1, item_2 = get_items()
print(item_1, item_2)
            </pre>
        </div>
		<div class = "subtitle">String</div>
		<div class = "block">
			<pre class = "prettyprint linenums">
# double quote
s = "Hello World!"
# single quote
s = 'Hello World!'
            </pre>
        </div>
		<div class = "block">
			<pre class = "prettyprint linenums">
# acces a character
print(s[1]) # e

# slicing
print(s[:2]) # He
sl = slice(0, 10, 2)
print(s[sl]) # HloWr

# concatenation
print(s+' ...') # Hello World! ...

# repeat
s4 = s*2
print(s4) # Hello World!Hello World

# in 
print('H' in s) # True
            </pre>
        </div>
		<div class = "block">
			<pre class = "prettyprint linenums">
# lower case
s5 = s.lower()
print(s5) # hello world!

# upper case
s6 = s.upper()
print(s6) # HELLO WORLD!

# join
c = '-'
print(c.join(['a', 'b', 'c'])) # a-b-c

# replace
print(s.replace('l', '-')) # He--o Wor-d!

# count
print(s.count('l')) # 3

# endswith
print(s.endswith('!')) # True 
            </pre>
        </div>
    </body>
</html>
